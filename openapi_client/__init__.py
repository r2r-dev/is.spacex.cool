# coding: utf-8

# flake8: noqa

"""
    r/SpaceX API Docs

    ## Disclaimer *We are not affiliated, associated, authorized, endorsed by, or in any way officially connected with Space Exploration Technologies Inc (SpaceX), or any of its subsidiaries or its affiliates. The names SpaceX as well as related names, marks, emblems and images are registered trademarks of their respective owners.*  ## Base URL The most current version of the API is v3, with the following base URL `https://api.spacexdata.com/v3`  ## API Status See the [status](https://status.spacexdata.com) page for details  ## Authentication No authentication is required to use this public API  ## JSON Field Masking Smaller JSON payloads can be generated through the use of the `filter` querystring. When using this querystring, all fields not included in the query will be omitted from the response.  For example, on the launches endpoint, you could include `filter=flight_number` to only return the flight number of every launch. Nested JSON fields can be expressed using a forward slash for each nested level. Ex: `filter=rocket/second_stage/payloads` to only return the payload objects from each launch. Multiple filters can be listed using a comma separator Ex: `filter=rocket/second_stage/payloads,flight_number,mission_name`.  More information on the syntax can be found on the json-mask [github](https://github.com/nemtsov/json-mask) page.  ## Pagination All endpoints that return an array of objects can be paginated by using the `limit` and `offset` querystrings. This allows you to limit results and create pages of results to offset or skip.  On all endpoints that return an array, the header `spacex-api-count` is included with the total number of items in the array. This can be used to page through the results. By default, there is no limit set.  For example, the url `https://api.spacexdata.com/v3/launches?limit=1&offset=5` will only return launch #6, because we limited the results to a single launch, and skipped the first 5 launches using offset.  ## Pretty Printing JSON pretty printing is turned off by default to reduce payload size. It can be enabled by including the querystring `pretty=true` in the url. ```http GET https://api.spacexdata.com/v3/launches/latest?pretty=true ```  ## Privacy I do not log IP addresses or any personally identifiable information at the app or web server level. I collect timestamps, HTTP methods, urls, and response times to adjust caching strategies on popular endpoints. Below is a sample log line output: ```bash [27/Aug/2018:00:42:06 +0000] \"GET /v3/launches/latest HTTP/1.1\" 200 - 51.478 ms ```  I use [Cloudflare](https://www.cloudflare.com/) in front of the API. Please see their [privacy policy](https://www.cloudflare.com/privacypolicy/) for more details on data collection policies.  ## Rate Limiting The API has a rate limit of 50 req/sec per IP address, if exceeded, a response of 429 will be given until the rate drops back below 50 req/sec  ## Caching In general, the standard cache times are as follows:  * launches - 30 seconds * ships, payloads, roadster - 5 minutes * capsules, cores, launchpads, landpads - 1 hour * dragons, rockets, missions, history, company info - 24 hours  ## Date field FAQ's Dates and Date related field explanations:  `launch_year` - Year of the launch in string form (Will be deprecated soon)  `launch_date_unix` - UTC launch date/time as a UNIX timestamp in seconds  `launch_date_utc` - UTC launch date/time in ISO 8601 format  `launch_date_local` - Local launch time with time zone offset in ISO 8601 format  `is_tentative` - Set as true until a launch has an time attached to the date  `tentative_max_precision` - Gives the current known precision for the launch date. Valid values are `quarter`, `half`, `year`, `month`, `day`, `hour`. This allows us to give more context when representing partial dates like `November 2019` with a precision of `month`  `tbd` - Set as false when the date includes a day number or a day number with a time, otherwise the date is considered to be TBD and set as true  `upcoming` - Set as true until the moment of launch  `static_fire_date_utc` - UTC date/time for the rocket static fire test in ISO 8601 format  `static_fire_date_unix` - UTC date/time for the rocket static fire test as a UNIX timestamp in seconds  # noqa: E501

    The version of the OpenAPI document: 1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

__version__ = "1.0.0"

# import apis into sdk package
from openapi_client.api.capsules_api import CapsulesApi
from openapi_client.api.cores_api import CoresApi
from openapi_client.api.dragons_api import DragonsApi
from openapi_client.api.history_api import HistoryApi
from openapi_client.api.info_api import InfoApi
from openapi_client.api.landing_pads_api import LandingPadsApi
from openapi_client.api.launch_pads_api import LaunchPadsApi
from openapi_client.api.launches_api import LaunchesApi
from openapi_client.api.missions_api import MissionsApi
from openapi_client.api.payloads_api import PayloadsApi
from openapi_client.api.roadster_api import RoadsterApi
from openapi_client.api.rockets_api import RocketsApi
from openapi_client.api.ships_api import ShipsApi

# import ApiClient
from openapi_client.api_client import ApiClient
from openapi_client.configuration import Configuration
from openapi_client.exceptions import OpenApiException
from openapi_client.exceptions import ApiTypeError
from openapi_client.exceptions import ApiValueError
from openapi_client.exceptions import ApiKeyError
from openapi_client.exceptions import ApiException
# import models into sdk package
from openapi_client.models.api_info import APIInfo
from openapi_client.models.all_capsule import AllCapsule
from openapi_client.models.all_dragon import AllDragon
from openapi_client.models.all_history import AllHistory
from openapi_client.models.all_landing_pad import AllLandingPad
from openapi_client.models.all_launch import AllLaunch
from openapi_client.models.all_launchpad import AllLaunchpad
from openapi_client.models.all_mission import AllMission
from openapi_client.models.all_payload import AllPayload
from openapi_client.models.all_rocket import AllRocket
from openapi_client.models.cargo import Cargo
from openapi_client.models.company_info import CompanyInfo
from openapi_client.models.composite_fairing import CompositeFairing
from openapi_client.models.composite_fairing1 import CompositeFairing1
from openapi_client.models.core import Core
from openapi_client.models.core1 import Core1
from openapi_client.models.core2 import Core2
from openapi_client.models.core4 import Core4
from openapi_client.models.diameter import Diameter
from openapi_client.models.diameter2 import Diameter2
from openapi_client.models.diameter3 import Diameter3
from openapi_client.models.engines import Engines
from openapi_client.models.engines1 import Engines1
from openapi_client.models.fairings import Fairings
from openapi_client.models.fairings1 import Fairings1
from openapi_client.models.fairings3 import Fairings3
from openapi_client.models.first_stage import FirstStage
from openapi_client.models.first_stage1 import FirstStage1
from openapi_client.models.first_stage2 import FirstStage2
from openapi_client.models.first_stage4 import FirstStage4
from openapi_client.models.first_stage5 import FirstStage5
from openapi_client.models.first_stage6 import FirstStage6
from openapi_client.models.headquarters import Headquarters
from openapi_client.models.heat_shield import HeatShield
from openapi_client.models.height import Height
from openapi_client.models.height1 import Height1
from openapi_client.models.height2 import Height2
from openapi_client.models.height_w_trunk import HeightWTrunk
from openapi_client.models.landing_legs import LandingLegs
from openapi_client.models.landing_legs1 import LandingLegs1
from openapi_client.models.latest_launch import LatestLaunch
from openapi_client.models.launch_failure_details import LaunchFailureDetails
from openapi_client.models.launch_payload_mass import LaunchPayloadMass
from openapi_client.models.launch_payload_vol import LaunchPayloadVol
from openapi_client.models.launch_site import LaunchSite
from openapi_client.models.links import Links
from openapi_client.models.links1 import Links1
from openapi_client.models.links2 import Links2
from openapi_client.models.links3 import Links3
from openapi_client.models.links5 import Links5
from openapi_client.models.links6 import Links6
from openapi_client.models.location import Location
from openapi_client.models.mass import Mass
from openapi_client.models.mission import Mission
from openapi_client.models.mission1 import Mission1
from openapi_client.models.next_launch import NextLaunch
from openapi_client.models.one_capsule import OneCapsule
from openapi_client.models.one_core import OneCore
from openapi_client.models.one_dragon import OneDragon
from openapi_client.models.one_historical_event import OneHistoricalEvent
from openapi_client.models.one_landing_pad import OneLandingPad
from openapi_client.models.one_launch import OneLaunch
from openapi_client.models.one_launchpad import OneLaunchpad
from openapi_client.models.one_mission import OneMission
from openapi_client.models.one_payload import OnePayload
from openapi_client.models.one_rocket1 import OneRocket1
from openapi_client.models.one_ship import OneShip
from openapi_client.models.one_ship_error import OneShipError
from openapi_client.models.orbit_params import OrbitParams
from openapi_client.models.orbit_params1 import OrbitParams1
from openapi_client.models.orbit_params2 import OrbitParams2
from openapi_client.models.orbit_params3 import OrbitParams3
from openapi_client.models.orbit_params5 import OrbitParams5
from openapi_client.models.orbit_params6 import OrbitParams6
from openapi_client.models.past_core import PastCore
from openapi_client.models.payload import Payload
from openapi_client.models.payload1 import Payload1
from openapi_client.models.payload2 import Payload2
from openapi_client.models.payload3 import Payload3
from openapi_client.models.payload4 import Payload4
from openapi_client.models.payload_volume import PayloadVolume
from openapi_client.models.payload_weight import PayloadWeight
from openapi_client.models.payloads import Payloads
from openapi_client.models.payloads1 import Payloads1
from openapi_client.models.position import Position
from openapi_client.models.pressurized_capsule import PressurizedCapsule
from openapi_client.models.return_payload_mass import ReturnPayloadMass
from openapi_client.models.return_payload_vol import ReturnPayloadVol
from openapi_client.models.roadster import Roadster
from openapi_client.models.rocket import Rocket
from openapi_client.models.rocket1 import Rocket1
from openapi_client.models.rocket2 import Rocket2
from openapi_client.models.rocket3 import Rocket3
from openapi_client.models.rocket4 import Rocket4
from openapi_client.models.second_stage import SecondStage
from openapi_client.models.second_stage1 import SecondStage1
from openapi_client.models.second_stage2 import SecondStage2
from openapi_client.models.second_stage3 import SecondStage3
from openapi_client.models.second_stage4 import SecondStage4
from openapi_client.models.second_stage5 import SecondStage5
from openapi_client.models.second_stage6 import SecondStage6
from openapi_client.models.telemetry import Telemetry
from openapi_client.models.telemetry1 import Telemetry1
from openapi_client.models.thrust import Thrust
from openapi_client.models.thrust2 import Thrust2
from openapi_client.models.thrust_sea_level import ThrustSeaLevel
from openapi_client.models.thrust_vacuum import ThrustVacuum
from openapi_client.models.thruster import Thruster
from openapi_client.models.timeline import Timeline
from openapi_client.models.timeline1 import Timeline1
from openapi_client.models.timeline2 import Timeline2
from openapi_client.models.trunk import Trunk
from openapi_client.models.trunk_volume import TrunkVolume
from openapi_client.models.upcoming_core import UpcomingCore
from openapi_client.models.upcoming_launch import UpcomingLaunch

